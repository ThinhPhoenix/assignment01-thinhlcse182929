@page
@model razorsignalr_newsmng.Pages.News.IndexModel

@{
	ViewData["Title"] = "Index";
}

@section Scripts
{
	<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
	<script>
				const connection = new signalR.HubConnectionBuilder()
					.withUrl("/newsHub")
					.build();

		connection.on("Change", function() {
			location.reload();
		});

		connection.start().catch(function(err) {
			console.error(err.toString());
		});
	</script>
}

@{
	if (Model.CurrentUser != null)
	{
		<h1>Hello <a asp-page="/Accounts/Edit" asp-route-id="@Model.CurrentUser.AccountId">@(Model.CurrentUser.AccountName)</a></h1>
	}
	else
	{
		<h1>Hello Guest</h1>
	}
}

<p>
	<a asp-page="Create">Create New</a>
</p>


<div class="search">
 <form method = "get" class="row mb-3 gap-2">
  <input type = "text" class="form-control" name="searchNewsTitle" placeholder="Search by news title name..." value="@Model.SearchNewsTitle">
  <input type = "text" class="form-control" name="searchNewsContent" placeholder="Search by news content..." value="@Model.SearchNewsContent">
  <button type = "submit" class="btn btn-primary me-md-2">Search</button>
 </form>
</div>

<div class="pagination gap-3 mb-2">
	@{
		if (Model.CurrentPage > 1)
		{
			<a href = "?page=@(Model.CurrentPage - 1)&searchNewsTitle=@(Model.SearchNewsTitle)&searchNewsContent=@(Model.SearchNewsContent)" > Previous </a>
        }
		<span>Page @Model.CurrentPage of @Model.TotalPages</span>
		if (Model.CurrentPage<Model.TotalPages)
        {
            <a href = "?page=@(Model.CurrentPage + 1)&searchNewsTitle=@(Model.SearchNewsTitle)&searchNewsContent=@(Model.SearchNewsContent)"> Next </a>
        }
	}
</div>

<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].NewsTitle)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].Headline)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].CreatedDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].NewsContent)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].NewsSource)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].NewsStatus)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].UpdatedById)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].ModifiedDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].Category)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.NewsArticle[0].CreatedBy)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model.NewsArticle)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.NewsTitle)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Headline)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreatedDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.NewsContent)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.NewsSource)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.NewsStatus)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.UpdatedById)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ModifiedDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Category.CategoryDesciption)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreatedBy.AccountName)
				</td>
				<td>
					<a asp-page="./Edit" asp-route-id="@item.NewsArticleId">Edit</a> |
					<a asp-page="./Details" asp-route-id="@item.NewsArticleId">Details</a> |
					<a asp-page="./Delete" asp-route-id="@item.NewsArticleId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
